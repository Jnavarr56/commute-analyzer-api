version: "3.8"
services:
  cache:
    container_name: "cache"
    image: "redis:latest"
    expose:
      - "6379"
  authentication-service:
    container_name: "authentication-service"
    build:
      context: "./authentication-service"
      dockerfile: "Dockerfile"
    volumes:
      - "./authentication-service:/app"
      - "/app/node_modules"
    depends_on:
      - "cache"
    command: bash -c "/wait && PORT=80 npm run dev"
    environment:
      - "NODE_ENV=development"
      - "PATHNAME_PREFIX=/authentication"
      - "AUTH_DOMAIN=${AUTH_DOMAIN}"
      - "AUTH_AUDIENCE=${AUTH_AUDIENCE}"
      - "WAIT_HOSTS=cache:6379"
    expose:
      - "80"
  places-service:
    container_name: "places-service"
    build:
      context: "./places-service"
      dockerfile: "Dockerfile"
    volumes:
      - "./places-service:/app"
    depends_on:
      - "cache"
    command: bash -c "rm -f tmp/pids/server.pid && /wait && bundle exec rails s -p 80 -b '0.0.0.0'"
    environment:
      - "RAILS_ENV=development"
      - "PATHNAME_PREFIX=/places"
      - "MONGO_DB_URL=${MONGO_DB_URL}"
      - "AUTHENTICATION_API_URL=http://authentication-service/authentication/verify"
      - "WAIT_HOSTS=authentication-service:80"
    expose:
      - "80"
  routing-server:
    container_name: "routing-server"
    build:
      context: "./nginx-routing-server"
      dockerfile: "Dockerfile"
    depends_on:
      - "places-service"
    command: bash -c "/wait && nginx -g 'daemon off;'"
    environment:
      - "WAIT_HOSTS=authentication-service:80"
    ports:
      - "8080:80"
# daemon on in production
