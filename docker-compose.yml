version: "3.8"
services:
  cache:
    container_name: "cache"
    image: "redis:latest"
    expose:
      - "6379"
  authentication-service:
    container_name: "authentication-service"
    build:
      context: "./authentication-service"
      dockerfile: "Dockerfile"
    volumes:
      - ".:/app"
      - "/app/authentication-service/node_modules"
    depends_on:
      - "cache"
    command: ["/app/wait-for-it.sh", "cache:6379", "--", "npm", "run", "dev"]
    environment:
      - "NODE_ENV=development"
      - "PATHNAME_PREFIX=/authentication"
      - "AUTH_DOMAIN=${AUTH_DOMAIN}"
      - "AUTH_AUDIENCE=${AUTH_AUDIENCE}"
      - "PORT=80"
    expose:
      - "80"
  # places-service:
  #   container_name: "places-service"
  #   build:
  #     context: "./places-service"
  #     dockerfile: "Dockerfile"
  #   volumes:
  #     - ".:/app"
  #     - "/app/authentication-service/node_modules"
  #   depends_on:
  #     - "cache"
  #   command: ["/app/wait-for-it.sh", "cache:6379", "--", "npm", "run", "dev"]
  #   environment:
  #     - "NODE_ENV=development"
  #     - "PATHNAME_PREFIX=/authentication"
  #     - "AUTH_DOMAIN=${AUTH_DOMAIN}"
  #     - "AUTH_AUDIENCE=${AUTH_AUDIENCE}"
  #     - "PORT=80"
  #   expose:
  #     - "80"

  routing-server:
    container_name: "routing-server"
    build:
      context: "./nginx-routing-server"
      dockerfile: "Dockerfile"
    volumes:
      - ".:/app"
    depends_on:
      - "authentication-service"
    command:
      [
        "/app/wait-for-it.sh",
        "authentication-service:80",
        "--",
        "nginx",
        "-g",
        "daemon off;",
      ]
    ports:
      - "8080:80"
# daemon on in production
